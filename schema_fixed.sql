

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."airport_pickup_bookings" (
    "id" bigint NOT NULL,
    "customer_name" "text" NOT NULL,
    "customer_email" "text" NOT NULL,
    "customer_phone" "text",
    "flight_number" "text",
    "arrival_date" "date",
    "arrival_time" time without time zone,
    "passengers" integer NOT NULL,
    "dropoff_location" "text",
    "service_type" "text" DEFAULT 'Private Transfer'::"text",
    "total_price" numeric(10,2) DEFAULT 75.00,
    "status" "text" DEFAULT 'pending'::"text",
    "created_at" timestamp with time zone DEFAULT "now"(),
    "departure_flight_number" "text",
    "departure_date" "date",
    "departure_time" time without time zone,
    "pickup_location" "text",
    "notes" "text",
    "uuid" "uuid" DEFAULT "extensions"."uuid_generate_v4"()
);


ALTER TABLE "public"."airport_pickup_bookings" OWNER TO "postgres";


ALTER TABLE "public"."airport_pickup_bookings" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."airport_pickup_bookings_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."blog_gallery_images" (
    "id" integer NOT NULL,
    "blog_post_id" integer NOT NULL,
    "image_url" "text" NOT NULL,
    "alt_text" "text" NOT NULL,
    "caption" "text",
    "position" integer NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."blog_gallery_images" OWNER TO "postgres";


CREATE SEQUENCE IF NOT EXISTS "public"."blog_gallery_images_id_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "public"."blog_gallery_images_id_seq" OWNER TO "postgres";


ALTER SEQUENCE "public"."blog_gallery_images_id_seq" OWNED BY "public"."blog_gallery_images"."id";



CREATE TABLE IF NOT EXISTS "public"."blog_posts" (
    "id" integer NOT NULL,
    "title" "text" NOT NULL,
    "excerpt" "text" NOT NULL,
    "content" "text" NOT NULL,
    "image_url" "text" NOT NULL,
    "author" "text" NOT NULL,
    "category" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "updated_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."blog_posts" OWNER TO "postgres";


CREATE SEQUENCE IF NOT EXISTS "public"."blog_posts_id_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "public"."blog_posts_id_seq" OWNER TO "postgres";


ALTER SEQUENCE "public"."blog_posts_id_seq" OWNED BY "public"."blog_posts"."id";



CREATE TABLE IF NOT EXISTS "public"."booking_special_requests" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "booking_id" "uuid",
    "special_request" "text",
    "created_at" timestamp with time zone DEFAULT "timezone"('utc'::"text", "now"()),
    "updated_at" timestamp with time zone DEFAULT "timezone"('utc'::"text", "now"())
);


ALTER TABLE "public"."booking_special_requests" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."bookings" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "tour_id" "uuid",
    "customer_name" "text" NOT NULL,
    "customer_email" "text" NOT NULL,
    "customer_phone" "text",
    "booking_date" "date" NOT NULL,
    "number_of_people" integer NOT NULL,
    "total_amount" numeric(10,2) NOT NULL,
    "status" "text" DEFAULT 'pending'::"text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."bookings" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."content" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "slug" "text" NOT NULL,
    "title" "text" NOT NULL,
    "content" "text" NOT NULL,
    "type" "text" DEFAULT 'page'::"text" NOT NULL,
    "status" "text" DEFAULT 'published'::"text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "updated_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."content" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."content_areas" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "area_key" "text" NOT NULL,
    "name" "text" NOT NULL,
    "description" "text",
    "image_url" "text" NOT NULL,
    "alt_text" "text",
    "section" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "updated_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."content_areas" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."driver_assignments" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "booking_id" "uuid",
    "driver_id" "uuid",
    "assignment_status" "text" DEFAULT 'assigned'::"text" NOT NULL,
    "assigned_at" timestamp with time zone DEFAULT "now"(),
    "completed_at" timestamp with time zone
);


ALTER TABLE "public"."driver_assignments" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."drivers" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "name" "text" NOT NULL,
    "phone" "text" NOT NULL,
    "email" "text",
    "status" "text" DEFAULT 'available'::"text" NOT NULL,
    "vehicle" "text",
    "created_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."drivers" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."gallery_images" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "title" "text" NOT NULL,
    "name" "text" NOT NULL,
    "image_url" "text" NOT NULL,
    "alt_text" "text",
    "description" "text",
    "category" "text",
    "size" integer,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "updated_at" timestamp with time zone DEFAULT "now"(),
    "tags" "text"[],
    "usage_count" integer DEFAULT 0
);


ALTER TABLE "public"."gallery_images" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."settings" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "key" "text" NOT NULL,
    "value" "text" NOT NULL,
    "description" "text",
    "updated_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."settings" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."team_members" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "name" "text" NOT NULL,
    "role" "text" NOT NULL,
    "image_url" "text" NOT NULL,
    "bio" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "updated_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."team_members" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."testimonials" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "location" "text",
    "quote" "text" NOT NULL,
    "image_url" "text",
    "rating" integer,
    "created_at" timestamp with time zone DEFAULT "now"(),
    CONSTRAINT "testimonials_rating_check" CHECK ((("rating" >= 1) AND ("rating" <= 5)))
);


ALTER TABLE "public"."testimonials" OWNER TO "postgres";


ALTER TABLE "public"."testimonials" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."testimonials_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."tour_gallery_images" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "tour_id" "uuid",
    "image_url" "text" NOT NULL,
    "alt_text" "text" NOT NULL
);


ALTER TABLE "public"."tour_gallery_images" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."tour_highlights" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "tour_id" "uuid",
    "content" "text" NOT NULL
);


ALTER TABLE "public"."tour_highlights" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."tour_itinerary" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "tour_id" "uuid",
    "title" "text" NOT NULL,
    "description" "text" NOT NULL,
    "display_order" integer NOT NULL
);


ALTER TABLE "public"."tour_itinerary" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."tours" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "title" "text" NOT NULL,
    "slug" "text" NOT NULL,
    "short_description" "text" NOT NULL,
    "description" "text" NOT NULL,
    "image_url" "text" NOT NULL,
    "price" numeric(10,2) NOT NULL,
    "duration" "text" NOT NULL,
    "group_size" "text" NOT NULL,
    "includes" "text"[] NOT NULL,
    "departure" "text" NOT NULL,
    "languages" "text"[] NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "updated_at" timestamp with time zone DEFAULT "now"(),
    "seo_title" "text",
    "seo_description" "text",
    "gallery_ids" "uuid"[],
    "highlights" "text"[],
    "itinerary" "jsonb",
    "categories" "text"[],
    "tags" "text"[],
    "status" "text" DEFAULT 'published'::"text"
);


ALTER TABLE "public"."tours" OWNER TO "postgres";


ALTER TABLE ONLY "public"."blog_gallery_images" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."blog_gallery_images_id_seq"'::"regclass");



ALTER TABLE ONLY "public"."blog_posts" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."blog_posts_id_seq"'::"regclass");



ALTER TABLE ONLY "public"."airport_pickup_bookings"
    ADD CONSTRAINT "airport_pickup_bookings_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."blog_gallery_images"
    ADD CONSTRAINT "blog_gallery_images_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."blog_posts"
    ADD CONSTRAINT "blog_posts_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."booking_special_requests"
    ADD CONSTRAINT "booking_special_requests_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."bookings"
    ADD CONSTRAINT "bookings_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."content_areas"
    ADD CONSTRAINT "content_areas_area_key_key" UNIQUE ("area_key");



ALTER TABLE ONLY "public"."content_areas"
    ADD CONSTRAINT "content_areas_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."content"
    ADD CONSTRAINT "content_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."content"
    ADD CONSTRAINT "content_slug_key" UNIQUE ("slug");



ALTER TABLE ONLY "public"."driver_assignments"
    ADD CONSTRAINT "driver_assignments_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."drivers"
    ADD CONSTRAINT "drivers_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."gallery_images"
    ADD CONSTRAINT "gallery_images_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."settings"
    ADD CONSTRAINT "settings_key_key" UNIQUE ("key");



ALTER TABLE ONLY "public"."settings"
    ADD CONSTRAINT "settings_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."team_members"
    ADD CONSTRAINT "team_members_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."testimonials"
    ADD CONSTRAINT "testimonials_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."testimonials"
    ADD CONSTRAINT "testimonials_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tour_gallery_images"
    ADD CONSTRAINT "tour_gallery_images_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tour_highlights"
    ADD CONSTRAINT "tour_highlights_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tour_itinerary"
    ADD CONSTRAINT "tour_itinerary_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tours"
    ADD CONSTRAINT "tours_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tours"
    ADD CONSTRAINT "tours_slug_key" UNIQUE ("slug");



CREATE INDEX "blog_gallery_images_blog_post_id_idx" ON "public"."blog_gallery_images" USING "btree" ("blog_post_id");



CREATE INDEX "blog_gallery_images_position_idx" ON "public"."blog_gallery_images" USING "btree" ("position");



CREATE INDEX "blog_posts_created_at_idx" ON "public"."blog_posts" USING "btree" ("created_at" DESC);



CREATE INDEX "bookings_booking_date_idx" ON "public"."bookings" USING "btree" ("booking_date");



CREATE INDEX "bookings_customer_email_idx" ON "public"."bookings" USING "btree" ("customer_email");



CREATE INDEX "bookings_status_idx" ON "public"."bookings" USING "btree" ("status");



CREATE INDEX "bookings_tour_id_idx" ON "public"."bookings" USING "btree" ("tour_id");



CREATE INDEX "content_areas_section_idx" ON "public"."content_areas" USING "btree" ("section");



CREATE INDEX "gallery_images_category_idx" ON "public"."gallery_images" USING "btree" ("category");



CREATE INDEX "gallery_images_created_at_idx" ON "public"."gallery_images" USING "btree" ("created_at" DESC);



CREATE INDEX "idx_booking_special_requests_booking_id" ON "public"."booking_special_requests" USING "btree" ("booking_id");



CREATE INDEX "idx_content_slug" ON "public"."content" USING "btree" ("slug");



CREATE INDEX "idx_driver_assignments_booking_id" ON "public"."driver_assignments" USING "btree" ("booking_id");



CREATE INDEX "idx_driver_assignments_driver_id" ON "public"."driver_assignments" USING "btree" ("driver_id");



CREATE INDEX "idx_settings_key" ON "public"."settings" USING "btree" ("key");



CREATE INDEX "idx_testimonials_created_at" ON "public"."testimonials" USING "btree" ("created_at");



CREATE INDEX "tour_gallery_images_tour_id_idx" ON "public"."tour_gallery_images" USING "btree" ("tour_id");



CREATE INDEX "tour_highlights_tour_id_idx" ON "public"."tour_highlights" USING "btree" ("tour_id");



CREATE INDEX "tour_itinerary_tour_id_idx" ON "public"."tour_itinerary" USING "btree" ("tour_id");



CREATE INDEX "tours_price_idx" ON "public"."tours" USING "btree" ("price");



ALTER TABLE ONLY "public"."blog_gallery_images"
    ADD CONSTRAINT "blog_gallery_images_blog_post_id_fkey" FOREIGN KEY ("blog_post_id") REFERENCES "public"."blog_posts"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."booking_special_requests"
    ADD CONSTRAINT "booking_special_requests_booking_id_fkey" FOREIGN KEY ("booking_id") REFERENCES "public"."bookings"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."bookings"
    ADD CONSTRAINT "bookings_tour_id_fkey" FOREIGN KEY ("tour_id") REFERENCES "public"."tours"("id") ON DELETE SET NULL;



ALTER TABLE ONLY "public"."driver_assignments"
    ADD CONSTRAINT "driver_assignments_driver_id_fkey" FOREIGN KEY ("driver_id") REFERENCES "public"."drivers"("id") ON DELETE SET NULL;



ALTER TABLE ONLY "public"."tour_gallery_images"
    ADD CONSTRAINT "tour_gallery_images_tour_id_fkey" FOREIGN KEY ("tour_id") REFERENCES "public"."tours"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."tour_highlights"
    ADD CONSTRAINT "tour_highlights_tour_id_fkey" FOREIGN KEY ("tour_id") REFERENCES "public"."tours"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."tour_itinerary"
    ADD CONSTRAINT "tour_itinerary_tour_id_fkey" FOREIGN KEY ("tour_id") REFERENCES "public"."tours"("id") ON DELETE CASCADE;



CREATE POLICY "Admin airport bookings delete" ON "public"."airport_pickup_bookings" FOR DELETE USING (("auth"."role"() = 'service_role'::"text"));



CREATE POLICY "Admin airport bookings management" ON "public"."airport_pickup_bookings" FOR UPDATE USING (("auth"."role"() = 'service_role'::"text"));



CREATE POLICY "Admin only assignments" ON "public"."driver_assignments" USING (("auth"."role"() = 'service_role'::"text"));



CREATE POLICY "Admin only bookings delete" ON "public"."bookings" FOR DELETE USING (("auth"."role"() = 'service_role'::"text"));



CREATE POLICY "Admin only bookings management" ON "public"."bookings" FOR UPDATE USING (("auth"."role"() = 'service_role'::"text"));



CREATE POLICY "Admin only drivers" ON "public"."drivers" USING (("auth"."role"() = 'service_role'::"text"));



CREATE POLICY "Allow public read access" ON "public"."testimonials" FOR SELECT USING (true);



CREATE POLICY "Public can create airport bookings" ON "public"."airport_pickup_bookings" FOR INSERT WITH CHECK (true);



CREATE POLICY "Public can create bookings" ON "public"."bookings" FOR INSERT WITH CHECK (true);



ALTER TABLE "public"."airport_pickup_bookings" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."bookings" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."driver_assignments" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."drivers" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."testimonials" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";


























































































































































































GRANT ALL ON TABLE "public"."airport_pickup_bookings" TO "anon";
GRANT ALL ON TABLE "public"."airport_pickup_bookings" TO "authenticated";
GRANT ALL ON TABLE "public"."airport_pickup_bookings" TO "service_role";



GRANT ALL ON SEQUENCE "public"."airport_pickup_bookings_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."airport_pickup_bookings_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."airport_pickup_bookings_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."blog_gallery_images" TO "anon";
GRANT ALL ON TABLE "public"."blog_gallery_images" TO "authenticated";
GRANT ALL ON TABLE "public"."blog_gallery_images" TO "service_role";



GRANT ALL ON SEQUENCE "public"."blog_gallery_images_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."blog_gallery_images_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."blog_gallery_images_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."blog_posts" TO "anon";
GRANT ALL ON TABLE "public"."blog_posts" TO "authenticated";
GRANT ALL ON TABLE "public"."blog_posts" TO "service_role";



GRANT ALL ON SEQUENCE "public"."blog_posts_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."blog_posts_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."blog_posts_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."booking_special_requests" TO "anon";
GRANT ALL ON TABLE "public"."booking_special_requests" TO "authenticated";
GRANT ALL ON TABLE "public"."booking_special_requests" TO "service_role";



GRANT ALL ON TABLE "public"."bookings" TO "anon";
GRANT ALL ON TABLE "public"."bookings" TO "authenticated";
GRANT ALL ON TABLE "public"."bookings" TO "service_role";



GRANT ALL ON TABLE "public"."content" TO "anon";
GRANT ALL ON TABLE "public"."content" TO "authenticated";
GRANT ALL ON TABLE "public"."content" TO "service_role";



GRANT ALL ON TABLE "public"."content_areas" TO "anon";
GRANT ALL ON TABLE "public"."content_areas" TO "authenticated";
GRANT ALL ON TABLE "public"."content_areas" TO "service_role";



GRANT ALL ON TABLE "public"."driver_assignments" TO "anon";
GRANT ALL ON TABLE "public"."driver_assignments" TO "authenticated";
GRANT ALL ON TABLE "public"."driver_assignments" TO "service_role";



GRANT ALL ON TABLE "public"."drivers" TO "anon";
GRANT ALL ON TABLE "public"."drivers" TO "authenticated";
GRANT ALL ON TABLE "public"."drivers" TO "service_role";



GRANT ALL ON TABLE "public"."gallery_images" TO "anon";
GRANT ALL ON TABLE "public"."gallery_images" TO "authenticated";
GRANT ALL ON TABLE "public"."gallery_images" TO "service_role";



GRANT ALL ON TABLE "public"."settings" TO "anon";
GRANT ALL ON TABLE "public"."settings" TO "authenticated";
GRANT ALL ON TABLE "public"."settings" TO "service_role";



GRANT ALL ON TABLE "public"."team_members" TO "anon";
GRANT ALL ON TABLE "public"."team_members" TO "authenticated";
GRANT ALL ON TABLE "public"."team_members" TO "service_role";



GRANT ALL ON TABLE "public"."testimonials" TO "anon";
GRANT ALL ON TABLE "public"."testimonials" TO "authenticated";
GRANT ALL ON TABLE "public"."testimonials" TO "service_role";



GRANT ALL ON SEQUENCE "public"."testimonials_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."testimonials_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."testimonials_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."tour_gallery_images" TO "anon";
GRANT ALL ON TABLE "public"."tour_gallery_images" TO "authenticated";
GRANT ALL ON TABLE "public"."tour_gallery_images" TO "service_role";



GRANT ALL ON TABLE "public"."tour_highlights" TO "anon";
GRANT ALL ON TABLE "public"."tour_highlights" TO "authenticated";
GRANT ALL ON TABLE "public"."tour_highlights" TO "service_role";



GRANT ALL ON TABLE "public"."tour_itinerary" TO "anon";
GRANT ALL ON TABLE "public"."tour_itinerary" TO "authenticated";
GRANT ALL ON TABLE "public"."tour_itinerary" TO "service_role";



GRANT ALL ON TABLE "public"."tours" TO "anon";
GRANT ALL ON TABLE "public"."tours" TO "authenticated";
GRANT ALL ON TABLE "public"."tours" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
