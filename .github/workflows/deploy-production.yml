name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run full test suite
        run: |
          pnpm type-check
          pnpm lint
          pnpm test
          pnpm test:e2e
        env:
          PLAYWRIGHT_BROWSERS_PATH: 0
          
      - name: Security audit
        run: pnpm audit --audit-level moderate
        
      - name: Build application
        run: pnpm build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.PRODUCTION_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PRODUCTION_SUPABASE_ANON_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.PRODUCTION_TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.PRODUCTION_TELEGRAM_CHAT_ID }}
          ADMIN_SESSION_SECRET: ${{ secrets.ADMIN_SESSION_SECRET }}
          
      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          
      - name: Run smoke tests
        run: pnpm test:smoke
        env:
          BASE_URL: ${{ steps.deploy.outputs.preview-url }}
          PLAYWRIGHT_BROWSERS_PATH: 0
          
      - name: Health check
        run: |
          curl -f ${{ steps.deploy.outputs.preview-url }}/api/health || exit 1
          
      - name: Notify production deployment
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const status = '${{ job.status }}';
            const emoji = status === 'success' ? 'ðŸš€' : 'ðŸ’¥';
            const color = status === 'success' ? 'good' : 'danger';
            
            // GitHub notification
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number || 1,
              body: `${emoji} **Production Deployment ${status.toUpperCase()}**\n\n- Environment: Production\n- Commit: ${context.sha.substring(0, 7)}\n- URL: ${{ steps.deploy.outputs.preview-url }}\n- Status: ${status}`
            });
            
            // Slack notification (if configured)
            if ('${{ secrets.SLACK_WEBHOOK_URL }}') {
              const slackPayload = {
                text: `${emoji} Production deployment ${status}`,
                attachments: [{
                  color: color,
                  fields: [
                    { title: 'Environment', value: 'Production', short: true },
                    { title: 'Status', value: status.toUpperCase(), short: true },
                    { title: 'Commit', value: context.sha.substring(0, 7), short: true },
                    { title: 'URL', value: '${{ steps.deploy.outputs.preview-url }}', short: true }
                  ]
                }]
              };
              
              await fetch('${{ secrets.SLACK_WEBHOOK_URL }}', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(slackPayload)
              });
            }
            
      - name: Create release
        uses: actions/create-release@v1
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            ## Production Deployment
            
            - **Commit:** ${{ github.sha }}
            - **Branch:** ${{ github.ref }}
            - **Environment:** Production
            - **URL:** ${{ steps.deploy.outputs.preview-url }}
            
            ### Changes
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false 