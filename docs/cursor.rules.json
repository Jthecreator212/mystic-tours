{
  "rules": [
    {
      "name": "Bug Documentation Master",
      "description": "Document every bug, fix, and lesson learned with structured reporting",
      "priority": "high",
      "triggers": ["bug_fix", "error_resolution", "issue_solution"],
      "actions": [
        "create_bug_report",
        "document_solution",
        "generate_prevention_rules",
        "update_knowledge_base"
      ]
    },
    {
      "name": "Repeated Issue Memory Creator",
      "description": "Automatically create memories when the same issue needs to be fixed more than once",
      "priority": "critical",
      "triggers": ["repeated_error", "same_issue_fix", "multiple_occurrences"],
      "conditions": {
        "threshold": 2,
        "time_window": "30_days",
        "issue_types": [
          "build_errors",
          "linter_errors", 
          "runtime_errors",
          "database_errors",
          "api_errors",
          "permission_errors",
          "import_errors",
          "type_errors",
          "validation_errors"
        ]
      },
      "actions": [
        "detect_repeated_issue",
        "create_memory_entry",
        "generate_prevention_strategy",
        "update_error_handling",
        "document_pattern"
      ],
      "memory_structure": {
        "issue_id": "unique_identifier",
        "issue_type": "error_category",
        "first_occurrence": "timestamp",
        "occurrence_count": "number",
        "error_message": "exact_error_text",
        "file_path": "affected_file",
        "line_number": "error_line",
        "root_cause": "analysis",
        "solution_applied": "fix_description",
        "prevention_measures": ["list_of_actions"],
        "related_files": ["affected_files"],
        "environment_context": "os_version_etc",
        "severity": "critical|high|medium|low",
        "time_to_resolve": "duration",
        "user_impact": "description"
      },
      "prevention_strategies": [
        "add_validation_checks",
        "improve_error_handling",
        "add_type_safety",
        "create_automated_tests",
        "update_documentation",
        "add_monitoring",
        "implement_guard_clauses"
      ]
    },
    {
      "name": "Error Pattern Recognition",
      "description": "Identify patterns in errors and create targeted prevention rules",
      "priority": "high",
      "triggers": ["pattern_detected", "similar_errors"],
      "actions": [
        "analyze_error_patterns",
        "categorize_issues",
        "create_pattern_memory",
        "generate_prevention_rule",
        "update_development_workflow"
      ]
    },
    {
      "name": "Memory Consolidation",
      "description": "Regularly review and consolidate related memories into actionable knowledge",
      "priority": "medium",
      "triggers": ["memory_review", "knowledge_consolidation"],
      "frequency": "weekly",
      "actions": [
        "review_recent_memories",
        "identify_patterns",
        "consolidate_related_issues",
        "create_best_practices",
        "update_development_guidelines"
      ]
    }
  ],
  "memory_templates": {
    "repeated_build_error": {
      "title": "Repeated Build Error: {error_type}",
      "content": "This error has occurred {count} times in {timeframe}. Root cause: {root_cause}. Solution: {solution}. Prevention: {prevention_measures}",
      "tags": ["build_error", "repeated_issue", "prevention_needed"]
    },
    "repeated_linter_error": {
      "title": "Repeated Linter Error: {error_type}",
      "content": "Linter error '{error_message}' has occurred {count} times. File: {file_path}. Fix: {solution}. Prevention: {prevention_measures}",
      "tags": ["linter_error", "code_quality", "repeated_issue"]
    },
    "repeated_runtime_error": {
      "title": "Repeated Runtime Error: {error_type}",
      "content": "Runtime error '{error_message}' has occurred {count} times. Context: {context}. Solution: {solution}. Prevention: {prevention_measures}",
      "tags": ["runtime_error", "production_issue", "repeated_issue"]
    },
    "repeated_database_error": {
      "title": "Repeated Database Error: {error_type}",
      "content": "Database error '{error_message}' has occurred {count} times. Table: {table}. Solution: {solution}. Prevention: {prevention_measures}",
      "tags": ["database_error", "data_integrity", "repeated_issue"]
    },
    "repeated_api_error": {
      "title": "Repeated API Error: {error_type}",
      "content": "API error '{error_message}' has occurred {count} times. Endpoint: {endpoint}. Solution: {solution}. Prevention: {prevention_measures}",
      "tags": ["api_error", "integration_issue", "repeated_issue"]
    }
  },
  "prevention_rules": {
    "build_errors": [
      "Always run 'pnpm lint' before committing",
      "Use TypeScript strict mode",
      "Add proper error boundaries",
      "Validate environment variables"
    ],
    "linter_errors": [
      "Use ESLint auto-fix before committing",
      "Add proper TypeScript types",
      "Follow consistent naming conventions",
      "Use proper import statements"
    ],
    "runtime_errors": [
      "Add comprehensive error handling",
      "Use try-catch blocks",
      "Validate user inputs",
      "Add proper fallbacks"
    ],
    "database_errors": [
      "Add database connection pooling",
      "Use proper transaction handling",
      "Validate data before insertion",
      "Add database constraints"
    ],
    "api_errors": [
      "Add proper HTTP status codes",
      "Use consistent error response format",
      "Add input validation",
      "Implement rate limiting"
    ]
  }
} 